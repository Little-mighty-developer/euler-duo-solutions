# frozen_string_literal: true

# Project Euler Problem 2: Even Fibonacci Numbers
# Each new term in the Fibonacci sequence is generated by adding the previous two
# terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not
# exceed four million, find the sum of the even-valued terms.

def sum_even_fibonacci(limit)
  raise ArgumentError, 'Limit must be a non-negative integer' if limit.negative?

  return 0 if limit <= 2  # Handle edge cases: 0, 1, 2

  # Initialize first two Fibonacci numbers
  a, b = 1, 2
  total = 0

  while b < limit
    # Add even numbers to total
    total += b if b.even?
    # Generate next Fibonacci number
    a, b = b, a + b
  end

  total
end

if __FILE__ == $PROGRAM_NAME
  limit = 4_000_000
  result = sum_even_fibonacci(limit)
  puts "The sum of even Fibonacci numbers below #{limit} is: #{result}"
end 